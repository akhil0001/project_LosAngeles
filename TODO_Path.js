// This is for test1.js (test1.js)

//TODO: 1. COMPLETE THE JSON CREATION -- Completed
//TODO: 2. CONVERT TIME TO UNIX TIMESTAMP -- Completed
// TODO: 3. COMPONENTIZE THE LOGIC INTO SEPARATE JS FILES(REQUIRE OR IMPORT) -- Completed
// TODO: 4.CHECK FOR ASYNC BEHAVIOUR IN LOGIC
// TODO: 5. CHECK IF THE FILES FETCHED ARE WORTHY(.LOG,.LOG.1,.TXT) -- Partially Completed But not yet .log.1 extensions
//TODO: CHECK FOR DATE FIELD REGEX PRESENT IN LOGS FOLDER

// TODO: 6.CHECK FOR ANY FOLDERS
// TODO: 7.ITERATE THROUGH FILES BEWARE OF ASYNC
// TODO: 8.WRITE INTO SINGLE JSON FILE
//TODO: 9. COMPARE THE TIMESTAMPS AND MERGE THEM INTO SINGLE FILE
//TODO: 10. CHECK FOR THE JAVA OR JAVASCRIPT CODE AND FLAG THEM AS CODE AND COMBINE IT WITH THE PREVIOUS CODE

//this is for test2.js (testCmd.js and createServer.js)

// TODO: 1. CREATE NODE COMMAND PROMPT -->Completed
// TODO: 2. RUN THE COMMAND FOR RUNNING THE File-->Completed
// TODO: 3. CREATE THE SERVER AND HOST THE HTML FILES-->Completed

// TODO: 4. WATCH THE FILES CONSTANTLY
// TODO: 5. CHECK FOR THE PORTS AVAILABLE --> Completed

// this is for test3.js

//TODO: 1. PROVIDE THE OPTIONS TO USERS FOR THE FILES TO BE CHECKED

//TODO: 2. PROVIDE THE OPTIONS TO HOT RELOAD OR NOT
//TODO: 3. COLORIFY THE CMD LINE -->Completed
//TODO: 4. MIiFY THE CMD LINE WITH -mi FLAG

//this is for test4.js

//TODO: 1. POPULATE THE DATA INTO CHARTS

//TODO: 2. CHECK THE CHARTS IN http://bl.ocks.org/bunkat/2338034
// http://vasturiano.github.io/timelines-chart/example/categorical/

//this is for test5.js

//TODO: 1.POPULATE THE DATA INTO TABLES
//TODO: 2.SORT THEM BY THE FILE NAMES AND ERROR TYPES

//TODO: 3.DYNAMIC DATA PUSHING
//TODO: 4.DYNAMIC DATA SORTING
//TODO: 5.SEARCH FUNCTIONALITY  - AXIOS CALL
//TODO: 6.ON CLICK SEPARATE DIV HAS TO BE OPENED WHERE THE PROPERTIES OF LOG FILE 
//TODO: 7.SIMILAR PROPERTIES OF LOG FILE LINE HAS TO BE SHOWN SO THAT USER CAN FIND THE PATTERNS IN ERRORS

//this is for DEVELOPERS

//RULE: 1.TDD MODEL HAS TO BE FOLLOWED
//RULE: 2.NO FUNCTION SHOULD HAVE MORE THAN 10 LINES OF CODE
//RULE: 3.NO REPETITION OF LOGIC
//RULE: 4.NO MODULE SHOULD BE MORE THAN THE 5 FUNCTIONS
//RULE: 5.NAMING CONVENTIONS DISCIPLINE HAS TO BE FOLLOWED
//TODO: 6.DESIGN PATTERN HAS TO BE DECIDED
//RULE: 7.ONE THING AT ONE TIME
//RULE: 8.U HAVE ONE PASS TO MAKE A MOVIE/COMIC/MANGA REFERENCE IN YOUR CODE

